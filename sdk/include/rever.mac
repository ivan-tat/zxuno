; rever.mac - macro to flip horizontally left 32 pixels of the screen
;
; SPDX-FileType: SOURCE
; SPDX-FileCopyrightText: Copyright (C) 2016 Antonio Villena
; SPDX-FileContributor: 2021 Ivan Tatarinov <ivan-tat@ya.ru>
; SPDX-License-Identifier: GPL-3.0-only

; Compatible compilers:
;   SJAsmPlus, <https://github.com/sjasmplus/sjasmplus/>

 ifndef rever_mac_included
 define rever_mac_included

 macro rever_byte
        ld      c, (hl)         ; C = M[HL]
        ld      a, 1<<7         ; A = target variable with end flag set
.loop   rl      c               ; CY = reg>>7, reg <<= 1
        rra                     ; A = (A>>1)+(CY<<7), CY = (previous A)&1
        jr      nc, .loop       ; repeat 7 times to fill A
        ld      (de), a         ; M[DE] = A
 endm

; Flips horizontally left 32 pixels of the screen (without attribues)
 macro rever
        ld      de, $4000+32-1  ; DE = SCREEN+32-1
.loop   ld      hl, 1-32
        add     hl, de          ; HL = DE+1-32
      dup 3
        rever_byte
        inc     hl              ; HL++		// next address
        dec     de              ; DE--		// previous address
      edup
        rever_byte
        ld      hl, 3+32
        add     hl, de
        ex      de, hl          ; DE += 3+32    // next screen line
        ld      a, d
        cp      high $5800
        jr      nz, .loop       ; if (DE != ATTRS) goto .loop
 endm

 endif  ; !rever_mac_included
